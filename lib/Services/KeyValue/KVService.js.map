{"version":3,"file":"KVService.js","sourceRoot":"","sources":["KVService.ts"],"names":[],"mappings":";;AAAA,+CAA0C;AAC1C,+CAA0C;AAG1C;CAUC;AAVD,8CAUC;AAED;IAIY,MAAM,KAAK,SAAS;QACxB,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE;YAC9B,IAAI,aAAa,GAAG,OAAO,CAAC,eAAe,qBAAS,CAAC,2BAA2B,EAAE,CAAC,CAAC,qBAAS,CAAC,2BAA2B,CAAC,CAAC;YAC3H,SAAS,CAAC,iBAAiB,GAAG,IAAI,aAAa,EAAE,CAAC;SACrD;QACD,OAAO,SAAS,CAAC,iBAAiB,CAAC;IACvC,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,SAAiB,EAAE,GAAW,EAAE,KAAU,EAAE,mBAA2B,EAAE,YAAqB,qBAAS,CAAC,eAAe;QAEnI,IAAI,SAAS,EAAE;YACX,KAAK,GAAG,qBAAS,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;SACpD;QAED,OAAO,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE,KAAK,EAAE,mBAAmB,CAAC,CAAC;IACpF,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,SAAiB,EAAE,GAAW,EAAE,YAAqB,qBAAS,CAAC,eAAe;QAC1F,OAAO,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;YAC/D,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;gBACnC,IAAI;oBACA,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,qBAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;iBAChD;gBACD,OAAO,CAAC,EAAE;oBACN,MAAM,CAAC,CAAC,CAAC,CAAC;oBACV,OAAO;iBACV;gBAED,OAAO,CAAC,KAAK,CAAC,CAAC;YACnB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED,MAAM,CAAC,WAAW,CAAC,SAAiB,EAAE,GAAW;QAC7C,OAAO,SAAS,CAAC,SAAS,CAAC,WAAW,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;IAC3D,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,SAAiB,EAAE,GAAW;QAC1C,OAAO,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;IACxD,CAAC;IAED,MAAM,CAAC,gBAAgB,CAAC,SAAiB,EAAE,GAAW,EAAE,mBAA2B;QAC/E,OAAO,SAAS,CAAC,SAAS,CAAC,gBAAgB,CAAC,SAAS,EAAE,GAAG,EAAE,mBAAmB,CAAC,CAAC;IACrF,CAAC;CACJ;AAhDD,8BAgDC","sourcesContent":["import {APIConfig} from \"../../APIConfig\";\nimport {DataUtils} from \"../../DataUtils\";\nimport {isNil} from \"lodash\";\n\nexport abstract class KVServiceProvider {\n    abstract setValue(namespace: string, key: string, value: any, expirationInSeconds: number): Promise<void>;\n\n    abstract getValue(namespace: string, key: string): Promise<any>;\n\n    abstract deleteValue(namespace: string, key: string): Promise<void>;\n\n    abstract hasValue(namespace: string, key: string): Promise<boolean>;\n\n    abstract updateExpiration(namespace: string, key: string, expirationInSeconds: number): Promise<void>;\n}\n\nexport class KVService {\n\n    private static _providerInstance: KVServiceProvider;\n\n    private static get _provider(): KVServiceProvider {\n        if (!KVService._providerInstance) {\n            let providerClass = require(`./Providers/${APIConfig.KV_STORAGE_SERVICE_PROVIDER}`)[APIConfig.KV_STORAGE_SERVICE_PROVIDER];\n            KVService._providerInstance = new providerClass();\n        }\n        return KVService._providerInstance;\n    }\n\n    static setValue(namespace: string, key: string, value: any, expirationInSeconds: number, encrypted: boolean = APIConfig.ENCRYPT_KV_DATA): Promise<void> {\n\n        if (encrypted) {\n            value = DataUtils.encrypt(JSON.stringify(value));\n        }\n\n        return KVService._provider.setValue(namespace, key, value, expirationInSeconds);\n    }\n\n    static getValue(namespace: string, key: string, encrypted: boolean = APIConfig.ENCRYPT_KV_DATA): Promise<any> {\n        return KVService._provider.getValue(namespace, key).then((value) => {\n            return new Promise((resolve, reject) => {\n                try {\n                    value = JSON.parse(DataUtils.decrypt(value));\n                }\n                catch (e) {\n                    reject(e);\n                    return;\n                }\n\n                resolve(value);\n            });\n        });\n    }\n\n    static deleteValue(namespace: string, key: string): Promise<void> {\n        return KVService._provider.deleteValue(namespace, key);\n    }\n\n    static hasValue(namespace: string, key: string): Promise<boolean> {\n        return KVService._provider.hasValue(namespace, key);\n    }\n\n    static updateExpiration(namespace: string, key: string, expirationInSeconds: number):Promise<void> {\n        return KVService._provider.updateExpiration(namespace, key, expirationInSeconds);\n    }\n}"]}