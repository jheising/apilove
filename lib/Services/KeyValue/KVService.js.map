{"version":3,"file":"KVService.js","sourceRoot":"","sources":["KVService.ts"],"names":[],"mappings":";;AAAA,+CAA0C;AAC1C,mCAA6B;AAC7B,6CAAwC;AAExC,MAAsB,iBAAiB;CAUtC;AAVD,8CAUC;AAED,MAAa,SAAS;IAIV,MAAM,KAAK,SAAS;QACxB,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE;YAC9B,IAAI,aAAa,GAAG,OAAO,CAAC,eAAe,qBAAS,CAAC,2BAA2B,EAAE,CAAC,CAAC,qBAAS,CAAC,2BAA2B,CAAC,CAAC;YAC3H,SAAS,CAAC,iBAAiB,GAAG,IAAI,aAAa,EAAE,CAAC;SACrD;QACD,OAAO,SAAS,CAAC,iBAAiB,CAAC;IACvC,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,SAAiB,EAAE,GAAW,EAAE,KAAU,EAAE,mBAA4B,EAAE,YAAqB,qBAAS,CAAC,eAAe;QAEpI,IAAG,cAAK,CAAC,KAAK,CAAC,EACf;YACI,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;SAC5B;QAED,IAAI,SAAS,EAAE;YACX,KAAK,GAAG,mBAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;SACnD;QAED,OAAO,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE,KAAK,EAAE,mBAAmB,CAAC,CAAC;IACpF,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,SAAiB,EAAE,GAAW,EAAE,YAAkB,EAAE,YAAqB,qBAAS,CAAC,eAAe;QAC9G,OAAO,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;YAE/D,IAAI,cAAK,CAAC,KAAK,CAAC,EAAE;gBACd,OAAO,YAAY,CAAC;aACvB;YAED,IAAI,SAAS,EAAE;gBACX,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,mBAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;aAC/C;YAED,OAAO,KAAK,CAAC;QACjB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,MAAM,CAAC,WAAW,CAAC,SAAiB,EAAE,GAAW;QAC7C,OAAO,SAAS,CAAC,SAAS,CAAC,WAAW,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;IAC3D,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,SAAiB,EAAE,GAAW;QAC1C,OAAO,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;IACxD,CAAC;IAED,MAAM,CAAC,gBAAgB,CAAC,SAAiB,EAAE,GAAW,EAAE,mBAA4B;QAChF,OAAO,SAAS,CAAC,SAAS,CAAC,gBAAgB,CAAC,SAAS,EAAE,GAAG,EAAE,mBAAmB,CAAC,CAAC;IACrF,CAAC;CACJ;AApDD,8BAoDC","sourcesContent":["import {APIConfig} from \"../../APIConfig\";\nimport {isNil} from \"lodash\";\nimport {APIUtils} from \"../../APIUtils\";\n\nexport abstract class KVServiceProvider {\n    abstract setValue(namespace: string, key: string, value: any, expirationInSeconds: number): Promise<void>;\n\n    abstract getValue(namespace: string, key: string): Promise<any>;\n\n    abstract deleteValue(namespace: string, key: string): Promise<void>;\n\n    abstract hasValue(namespace: string, key: string): Promise<boolean>;\n\n    abstract updateExpiration(namespace: string, key: string, expirationInSeconds: number): Promise<void>;\n}\n\nexport class KVService {\n\n    private static _providerInstance: KVServiceProvider;\n\n    private static get _provider(): KVServiceProvider {\n        if (!KVService._providerInstance) {\n            let providerClass = require(`./Providers/${APIConfig.KV_STORAGE_SERVICE_PROVIDER}`)[APIConfig.KV_STORAGE_SERVICE_PROVIDER];\n            KVService._providerInstance = new providerClass();\n        }\n        return KVService._providerInstance;\n    }\n\n    static setValue(namespace: string, key: string, value: any, expirationInSeconds?: number, encrypted: boolean = APIConfig.ENCRYPT_KV_DATA): Promise<void> {\n\n        if(isNil(value))\n        {\n            return Promise.resolve();\n        }\n\n        if (encrypted) {\n            value = APIUtils.encrypt(JSON.stringify(value));\n        }\n\n        return KVService._provider.setValue(namespace, key, value, expirationInSeconds);\n    }\n\n    static getValue(namespace: string, key: string, defaultValue?: any, encrypted: boolean = APIConfig.ENCRYPT_KV_DATA): Promise<any> {\n        return KVService._provider.getValue(namespace, key).then((value) => {\n\n            if (isNil(value)) {\n                return defaultValue;\n            }\n\n            if (encrypted) {\n                value = JSON.parse(APIUtils.decrypt(value));\n            }\n\n            return value;\n        });\n    }\n\n    static deleteValue(namespace: string, key: string): Promise<void> {\n        return KVService._provider.deleteValue(namespace, key);\n    }\n\n    static hasValue(namespace: string, key: string): Promise<boolean> {\n        return KVService._provider.hasValue(namespace, key);\n    }\n\n    static updateExpiration(namespace: string, key: string, expirationInSeconds?: number): Promise<void> {\n        return KVService._provider.updateExpiration(namespace, key, expirationInSeconds);\n    }\n}"]}