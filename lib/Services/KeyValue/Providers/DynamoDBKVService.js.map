{"version":3,"file":"DynamoDBKVService.js","sourceRoot":"","sources":["DynamoDBKVService.ts"],"names":[],"mappings":"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","sourcesContent":["import {KVServiceProvider} from \"../KVService\";\nimport {isNil, get} from \"lodash\";\nimport * as aws from \"aws-sdk\";\nimport {APIConfig} from \"../../../APIConfig\";\n\nexport class DynamoDBKVStorage extends KVServiceProvider\n{\n    private static _dynamoClient;\n    static get dynamoClient() {\n        if (!DynamoDBKVStorage._dynamoClient) {\n            DynamoDBKVStorage._dynamoClient = new aws.DynamoDB();\n        }\n\n        return DynamoDBKVStorage._dynamoClient;\n    }\n\n    setValue(namespace:string, key:string, value:any, expirationInSeconds:number):Promise<void>\n    {\n        value = JSON.stringify(value);\n\n        let data: any = {\n            namespace: {\n                S: namespace\n            },\n            key: {\n                S: key\n            },\n            value: {\n                S: value\n            },\n            expires: {\n                N: \"-1\"\n            }\n        };\n\n        if (!isNil(expirationInSeconds) && expirationInSeconds != -1) {\n            data.expires.N = Math.round(Date.now() / 1000 + expirationInSeconds).toString();\n        }\n\n        return DynamoDBKVStorage.dynamoClient.putItem({\n            Item: data,\n            TableName: APIConfig.DYNAMO_KV_STORAGE_TABLE_NAME,\n            ReturnConsumedCapacity: \"NONE\"\n        }).promise().then(() => Promise.resolve());\n    }\n\n    hasValue(namespace:string, key:string):Promise<boolean>\n    {\n        return this.getValue(namespace, key).then((value) => Promise.resolve(!isNil(value)));\n    }\n\n    getValue(namespace:string, key:string):Promise<any>\n    {\n        return DynamoDBKVStorage.dynamoClient.getItem({\n            Key: {\n                namespace: {\n                    S: namespace\n                },\n                key: {\n                    S: key\n                }\n            },\n            TableName: APIConfig.DYNAMO_KV_STORAGE_TABLE_NAME,\n            ReturnConsumedCapacity: \"NONE\",\n            AttributesToGet: [\"value\", \"expires\"]\n        }).promise().then((data) => {\n            let value = get(data, \"Item.value.S\");\n\n            let expires = get(data, \"Item.expires.N\", -1);\n            if(expires > 0)\n            {\n                let now = Math.round(Date.now() / 1000);\n                if(expires <= now)\n                {\n                    value = undefined;\n                }\n            }\n\n            if(!isNil(value))\n            {\n                value = JSON.parse(value);\n            }\n\n            return Promise.resolve(value);\n        });\n    }\n\n    deleteValue(namespace:string, key:string):Promise<void>\n    {\n        return DynamoDBKVStorage.dynamoClient.deleteItem({\n            Key: {\n                namespace: {\n                    S: namespace\n                },\n                key: {\n                    S: key\n                }\n            },\n            TableName: APIConfig.DYNAMO_KV_STORAGE_TABLE_NAME,\n            ReturnConsumedCapacity: \"NONE\"\n        }).promise().then(() => Promise.resolve());\n    }\n\n    updateExpiration(namespace:string, key:string, expirationInSeconds:number):Promise<void>\n    {\n        return DynamoDBKVStorage.dynamoClient.updateItem({\n            ExpressionAttributeNames: {\n                \"#AT\": \"expires\"\n            },\n            ExpressionAttributeValues: {\n                \":t\": {\n                    N: Math.round(Date.now() / 1000 + expirationInSeconds).toString()\n                }\n            },\n            Key: {\n                namespace: {\n                    S: namespace\n                },\n                key: {\n                    S: key\n                }\n            },\n            ReturnValues: \"NONE\",\n            TableName: APIConfig.DYNAMO_KV_STORAGE_TABLE_NAME,\n            UpdateExpression: \"SET #AT = :t\"\n        }).promise().then(() => Promise.resolve());\n    }\n}"]}