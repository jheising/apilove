{"version":3,"file":"MemoryKVService.js","sourceRoot":"","sources":["MemoryKVService.ts"],"names":[],"mappings":";;AAAA,mCAAwD;AACxD,4CAAgF;AAOhF,MAAa,eAAgB,SAAQ,6BAAiB;IAAtD;;QACY,UAAK,GAAG,EAAE,CAAC;IAkDvB,CAAC;IAhDW,UAAU,CAAC,KAA0B;QAEzC,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC,IAAI,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IAC9D,CAAC;IAED,QAAQ,CAAC,SAAiB,EAAE,GAAW,EAAE,KAAU,EAAE,mBAA2B;QAE5E,YAAG,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,SAAS,EAAE,GAAG,CAAC,EAAE;YAC9B,OAAO,EAAE,cAAK,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,mBAAmB,GAAG,IAAI;YACzF,KAAK,EAAE,KAAK;SACS,CAAC,CAAC;QAE3B,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IAED,QAAQ,CAAC,SAAiB,EAAE,GAAW;QACnC,OAAO,OAAO,CAAC,OAAO,CAAC,YAAG,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC;IAED,QAAQ,CAAC,SAAiB,EAAE,GAAW;QACnC,IAAI,IAAI,GAAG,YAAG,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC;QAE7C,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;YACvB,cAAK,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC;YACpC,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;SAC5B;QAED,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACvC,CAAC;IAED,WAAW,CAAC,SAAiB,EAAE,GAAW;QACtC,cAAK,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC;QACpC,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IAED,gBAAgB,CAAC,SAAiB,EAAE,GAAW,EAAE,mBAA2B;QACxE,IAAI,IAAI,GAAG,YAAG,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC;QAE7C,IAAI,CAAC,cAAK,CAAC,IAAI,CAAC,EAAE;YACd,IAAI,CAAC,UAAU,GAAG,cAAK,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,mBAAmB,GAAG,IAAI,CAAC;SACtG;QAED,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IAED,SAAS,CAAC,SAAiB,EAAE,IAAY,EAAE,QAAgB;QACvD,OAAO,OAAO,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;IAC7C,CAAC;CACJ;AAnDD,0CAmDC","sourcesContent":["import {isNil, set, has, get, unset, map} from \"lodash\";\nimport {KVServiceProvider, KVServiceValues, KVServiceValue} from \"../KVService\";\n\ninterface MemoryKVServiceValue {\n    expires: number;\n    value: any;\n}\n\nexport class MemoryKVService extends KVServiceProvider {\n    private _data = {};\n\n    private _isExpired(value:MemoryKVServiceValue)\n    {\n        return (value.expires > 0 && value.expires <= Date.now());\n    }\n\n    setValue(namespace: string, key: string, value: any, expirationInSeconds: number): Promise<void> {\n\n        set(this._data, [namespace, key], {\n            expires: isNil(expirationInSeconds) ? undefined : Date.now() + expirationInSeconds * 1000,\n            value: value\n        } as MemoryKVServiceValue);\n\n        return Promise.resolve();\n    }\n\n    hasValue(namespace: string, key: string): Promise<boolean> {\n        return Promise.resolve(has(this._data, [namespace, key]));\n    }\n\n    getValue(namespace: string, key: string): Promise<any> {\n        let data = get(this._data, [namespace, key]);\n\n        if (this._isExpired(data)) {\n            unset(this._data, [namespace, key]);\n            return Promise.resolve();\n        }\n\n        return Promise.resolve(data.value);\n    }\n\n    deleteValue(namespace: string, key: string):Promise<void> {\n        unset(this._data, [namespace, key]);\n        return Promise.resolve();\n    }\n\n    updateExpiration(namespace: string, key: string, expirationInSeconds: number):Promise<void> {\n        let data = get(this._data, [namespace, key]);\n\n        if (!isNil(data)) {\n            data.expiration = isNil(expirationInSeconds) ? undefined : Date.now() + expirationInSeconds * 1000;\n        }\n\n        return Promise.resolve();\n    }\n\n    getValues(namespace: string, page: number, pageSize: number): Promise<KVServiceValues> {\n        return Promise.reject(\"Not implemented\");\n    }\n}"]}