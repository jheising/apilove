{"version":3,"file":"APIResponse.js","sourceRoot":"","sources":["APIResponse.ts"],"names":[],"mappings":"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","sourcesContent":["import {APIConfig} from \"./APIConfig\";\nimport {APIError} from \"./APIError\";\nimport {get, isNil} from \"lodash\";\nimport {URL} from \"url\";\n\nexport class APIResponse {\n    req;\n    res;\n\n    constructor(req?, res?) {\n        this.req = req;\n        this.res = res;\n    }\n\n    static withError(req, res, error: any, hapiOutput: boolean = APIConfig.OUTPUT_HAPI_RESULTS) {\n        return new APIResponse(req, res).withError(error, hapiOutput);\n    }\n\n    processHandlerFunction(target: any, handlerFunction: Function, handlerArgs: any[] = [], successResponseHandler?: (responseData: any, res) => void) {\n        // Add the req, and res to the end arguments if the function wants it\n        handlerArgs = handlerArgs.concat([this.req, this.res]);\n\n        let handlerPromise = handlerFunction.apply(target, handlerArgs);\n        if (!(handlerPromise instanceof Promise)) {\n            throw new Error(`API function named '${handlerFunction.name}' doesn't return a promise.`);\n        }\n        else {\n            handlerPromise.then((data: any) => {\n\n                // If the data is a URL, consider this a redirect.\n                if (data instanceof URL) {\n                    this.res.redirect((<URL>data).toString());\n                    return;\n                }\n\n                if (!isNil(successResponseHandler)) {\n                    successResponseHandler(data, this.res);\n                }\n                else {\n                    this.withSuccess(data, 200);\n                }\n            }).catch((error: any) => {\n                this.withError(error);\n            });\n        }\n    }\n\n    withError(error: any, hapiOutput: boolean = APIConfig.OUTPUT_HAPI_RESULTS) {\n        if (isNil(error)) {\n            return false;\n        }\n\n        let apiError: APIError;\n\n        if (error instanceof APIError) {\n            apiError = error;\n        }\n        else {\n            apiError = new APIError(\"unknown\", error);\n        }\n\n        if ((apiError.statusCode >= 500 && apiError.statusCode <= 599 && APIConfig.LOG_500_ERRORS) ||\n            (apiError.statusCode >= 400 && apiError.statusCode <= 499 && APIConfig.LOG_400_ERRORS)) {\n            console.error(JSON.stringify(apiError.out(true)));\n        }\n\n        this.res.status(apiError.statusCode).send(hapiOutput ? apiError.hapiOut() : apiError.out());\n    }\n\n    withSuccess(data?: any, statusCode: number = 200, hapiOutput: boolean = APIConfig.OUTPUT_HAPI_RESULTS) {\n\n        let output = data;\n\n        if (hapiOutput) {\n            output = {\n                \"this\": \"succeeded\",\n                \"with\": data\n            }\n        }\n\n        this.res.status(statusCode).send(output);\n    }\n}"]}