{"version":3,"file":"DocTOC.js","sourceRoot":"","sources":["DocTOC.tsx"],"names":[],"mappings":";;AAAA,+BAA+B;AAE/B,mCAAoC;AAMpC,MAAa,MAAO,SAAQ,KAAK,CAAC,aAA0B;IACxD,eAAe,CAAC,UAAsB;QAClC,IAAI,gBAAO,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE;YAC/B,OAAO,IAAI,CAAC;SACf;QAED,OAAO,gCACF,YAAG,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,eAAmC,EAAE,KAAK,EAAE,EAAE;YACtE,OAAO,4BAAI,GAAG,EAAE,KAAK;gBACjB,+BAAI,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAK,CACtC,CAAA;QACT,CAAC,CAAC,CACD,CAAC;IACV,CAAC;IAED,UAAU;QACN,OAAO,YAAG,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,UAAsB,EAAE,KAAK,EAAE,EAAE;YAClE,OAAO,4BAAI,GAAG,EAAE,KAAK;gBACjB,+BAAI,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAK;gBACjC,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAChC,CAAA;QACT,CAAC,CAAC,CAAC;IACP,CAAC;IAED,MAAM;QACF,OAAO,+BAAO,SAAS,EAAC,cAAc;YAClC,4BAAI,SAAS,EAAC,WAAW;gBACrB;oBAAI,8CAAmB,CAAK,CAC3B;YACL,2BAAG,SAAS,EAAC,YAAY,WAErB;YACJ,4BAAI,SAAS,EAAC,WAAW,IACpB,IAAI,CAAC,UAAU,EAAE,CACjB,CACD,CAAC;IACb,CAAC;CACJ;AArCD,wBAqCC","sourcesContent":["import * as React from \"react\";\nimport {APIDocData, APIEndpointDocData, APILoveDocData} from \"../../APIDocs\";\nimport {map, isEmpty} from \"lodash\";\n\nexport interface DocTOCProps {\n    docData: APILoveDocData;\n}\n\nexport class DocTOC extends React.PureComponent<DocTOCProps> {\n    renderEndpoints(apiDocData: APIDocData) {\n        if (isEmpty(apiDocData.endpoints)) {\n            return null;\n        }\n\n        return <ul>\n            {map(apiDocData.endpoints, (endpointDocData: APIEndpointDocData, index) => {\n                return <li key={index}>\n                    <a>{endpointDocData.overview.title}</a>\n                </li>\n            })}\n        </ul>;\n    }\n\n    renderAPIs() {\n        return map(this.props.docData.apis, (apiDocData: APIDocData, index) => {\n            return <li key={index}>\n                <a>{apiDocData.overview.title}</a>\n                {this.renderEndpoints(apiDocData)}\n            </li>\n        });\n    }\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n        return <aside className=\"doc-toc menu\">\n            <ul className=\"menu-list\">\n                <li><a>Introduction</a></li>\n            </ul>\n            <p className=\"menu-label\">\n                APIs\n            </p>\n            <ul className=\"menu-list\">\n                {this.renderAPIs()}\n            </ul>\n        </aside>;\n    }\n}"]}