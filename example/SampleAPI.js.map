{"version":3,"file":"SampleAPI.js","sourceRoot":"","sources":["SampleAPI.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,wCAAqD;AAErD,MAAa,SAAS;IAAtB;QAEI,SAAI,GAAG,SAAS,CAAC;IAuCrB,CAAC;IAjCG,MAAM,CAAC,UAAU,CACb,IAAY,EAAE,kDAAkD;IAIhE,IAAQ,EAAE,6CAA6C;IACvD,GAAI,EAAE,oCAAoC;IAC1C,GAAI,CAAC,qCAAqC;;QAG1C,OAAO,IAAI,OAAO,CAAM,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACxC,OAAO,CAAC,IAAI,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC;IACP,CAAC;IAMD,YAAY,CAIR,IAAY,EAAE,kDAAkD;IAChE,IAAQ,EAAE,6CAA6C;IACvD,GAAI,EAAE,oCAAoC;IAC1C,GAAI,CAAC,qCAAqC;;QAG1C,OAAO,IAAI,OAAO,CAAM,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACxC,OAAO,CAAC,IAAI,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC;IACP,CAAC;CACJ;AAdG;IAJC,qBAAW,CAAC;QACT,MAAM,EAAE,MAAM;QACd,IAAI,EAAE,YAAY;KACrB,CAAC;IAEG,WAAA,sBAAY,CAAC;QACV,QAAQ,EAAE,IAAI;KACjB,CAAC,CAAA;;;;6CAUL;AAhCD;IAJC,qBAAW,CAAC;QACT,MAAM,EAAE,MAAM;QACd,IAAI,EAAE,YAAY;KACrB,CAAC;IAGG,WAAA,sBAAY,CAAC;QACV,QAAQ,EAAE,IAAI;KACjB,CAAC,CAAA;;;;iCASL;AArBL,8BAyCC","sourcesContent":["import {APIEndpoint, APIParameter} from \"../APILove\";\n\nexport class SampleAPI {\n\n    blah = \"yo!sddf\";\n\n    @APIEndpoint({\n        method: \"POST\",\n        path: \"/foo/:what\"\n    })\n    static staticFunc(\n        what: string, // This will be retrieved as a string from the URL\n        @APIParameter({\n            optional: true\n        })\n        data:any, // The body will be parsed and sent back here\n        req?, // Access the raw express.js request\n        res? // Access the raw express.js response\n    ): Promise<any> {\n\n        return new Promise<any>((resolve, reject) => {\n            resolve(data);\n        });\n    }\n\n    @APIEndpoint({\n        method: \"POST\",\n        path: \"/foo/:what\"\n    })\n    instanceFunc(\n        @APIParameter({\n            optional: true\n        })\n        what: string, // This will be retrieved as a string from the URL\n        data:any, // The body will be parsed and sent back here\n        req?, // Access the raw express.js request\n        res? // Access the raw express.js response\n    ): Promise<any> {\n\n        return new Promise<any>((resolve, reject) => {\n            resolve(data);\n        });\n    }\n}"]}